// <auto-generated />
using System;
using Achareh.Infrastructure.EfCore.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Achareh.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250307211235_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Achareh.Domain.Core.Entities.BaseEntities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "تهران"
                        },
                        new
                        {
                            Id = 2,
                            Title = "مشهد"
                        },
                        new
                        {
                            Id = 3,
                            Title = "اصفهان"
                        },
                        new
                        {
                            Id = 4,
                            Title = "شیراز"
                        },
                        new
                        {
                            Id = 5,
                            Title = "تبریز"
                        },
                        new
                        {
                            Id = 6,
                            Title = "کرج"
                        },
                        new
                        {
                            Id = 7,
                            Title = "قم"
                        },
                        new
                        {
                            Id = 8,
                            Title = "اهواز"
                        },
                        new
                        {
                            Id = 9,
                            Title = "اردبیل"
                        },
                        new
                        {
                            Id = 10,
                            Title = "کرمانشاه"
                        },
                        new
                        {
                            Id = 11,
                            Title = "زاهدان"
                        },
                        new
                        {
                            Id = 12,
                            Title = "ارومیه"
                        },
                        new
                        {
                            Id = 13,
                            Title = "یزد"
                        },
                        new
                        {
                            Id = 14,
                            Title = "همدان"
                        },
                        new
                        {
                            Id = 15,
                            Title = "قزوین"
                        },
                        new
                        {
                            Id = 16,
                            Title = "سنندج"
                        },
                        new
                        {
                            Id = 17,
                            Title = "بندرعباس"
                        },
                        new
                        {
                            Id = 18,
                            Title = "زنجان"
                        },
                        new
                        {
                            Id = 19,
                            Title = "ساری"
                        },
                        new
                        {
                            Id = 20,
                            Title = "بوشهر"
                        },
                        new
                        {
                            Id = 21,
                            Title = "مازندران"
                        },
                        new
                        {
                            Id = 22,
                            Title = "گرگان"
                        },
                        new
                        {
                            Id = 23,
                            Title = "کرمان"
                        },
                        new
                        {
                            Id = 24,
                            Title = "خرم آباد"
                        },
                        new
                        {
                            Id = 25,
                            Title = "سمنان"
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.BaseEntities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/tamizkari.jpg",
                            IsDeleted = false,
                            Title = "تمیزکاری"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/sakhteman.jpg",
                            IsDeleted = false,
                            Title = "ساختمان"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/tamirat_ashya.jpg",
                            IsDeleted = false,
                            Title = "تعمیرات اشیا"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/asbabkeshi.jpg",
                            IsDeleted = false,
                            Title = "اسباب کشی و حمل بار"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/khodro.jpg",
                            IsDeleted = false,
                            Title = "خودرو"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/salamat_zibayi.jpg",
                            IsDeleted = false,
                            Title = "سلامت و زیبایی"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/sazmanha_va_mojtamha.jpg",
                            IsDeleted = false,
                            Title = "سازمان ها و مجتمع ها"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/category/sayer.jpg",
                            IsDeleted = false,
                            Title = "سایر"
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.ExpertOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OfferDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferStatusEnum")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("SuggestedPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.HasIndex("RequestId");

                    b.ToTable("ExpertOffers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "من این خانه را به خوبی نظافت می کنم",
                            ExpertId = 1,
                            IsDeleted = false,
                            OfferDate = new DateTime(2025, 3, 10, 13, 12, 34, 869, DateTimeKind.Local).AddTicks(647),
                            OfferStatusEnum = 3,
                            RequestId = 1,
                            SuggestedPrice = 2200
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "پیشنهاد برای طراحی اتاق کودک",
                            ExpertId = 1,
                            IsDeleted = false,
                            OfferDate = new DateTime(2025, 3, 9, 13, 12, 34, 869, DateTimeKind.Local).AddTicks(793),
                            OfferStatusEnum = 1,
                            RequestId = 2,
                            SuggestedPrice = 2300
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "من این راه پله ها را به خوبی تمیز میکنم با قیمت مناسب",
                            ExpertId = 2,
                            IsDeleted = false,
                            OfferDate = new DateTime(2025, 3, 9, 13, 12, 34, 869, DateTimeKind.Local).AddTicks(796),
                            OfferStatusEnum = 2,
                            RequestId = 3,
                            SuggestedPrice = 2400
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " من این راه پله ها را به خوبی تمیز میکنم",
                            ExpertId = 3,
                            IsDeleted = false,
                            OfferDate = new DateTime(2025, 3, 12, 13, 12, 34, 869, DateTimeKind.Local).AddTicks(800),
                            OfferStatusEnum = 2,
                            RequestId = 3,
                            SuggestedPrice = 2000
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.HomeService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VisitCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("HomeServices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/nezafat_manzel.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 1,
                            Title = "خدمات نظافت منزل",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/nezafat_rahpele.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 1,
                            Title = "نظافت راه پله",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/ghalishoyi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 2,
                            Title = "قالیشویی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/pardeshoyi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 2,
                            Title = "پرده شویی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/seramik_khodro.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 3,
                            Title = "سرامیک خودرو",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/sefrshoyi_khodro.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 3,
                            Title = "صفرشویی خودرو",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamir_coolerabi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 4,
                            Title = "تعمیر و سرویس کولر آبی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kanalsazi_cooler.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 4,
                            Title = "کانال سازی کولر",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamir_motorkhane.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 4,
                            Title = "تعمیر و نگهداری موتورخانه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/sangkari.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 5,
                            Title = "سنگ کاری",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/banayi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 5,
                            Title = "بنایی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/klidsazi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 5,
                            Title = "کلیدسازی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kafsabi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 5,
                            Title = "کفسابی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/lolekeshi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 6,
                            Title = "خدمات لوله کشی ساختمان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/lolebazkoni.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 6,
                            Title = "تخلیه چاه و لوله بازکنی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/lolekeshi_fazelab.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 6,
                            Title = "لوله کشی آب و فاضلاب",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/moshavere_bazsazi_sakhteman.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 7,
                            Title = "مشاوره و بازسازی ساختمان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/dekorasion_sakhteman.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 7,
                            Title = "دکوراسیون و طراحی ساختمان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/khadamat_baqbani.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 8,
                            Title = "خدمات باغبانی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kasht_goldan.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 8,
                            Title = "کاشت و تعویض گلدان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamirat_mobleman.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 9,
                            Title = "تعمیرات مبلمان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamirat_mobleman_edari.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 9,
                            Title = "تعمیرات مبلمان اداری",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamir_panke.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 10,
                            Title = "تعمیر پنکه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/nasb_va_tamir_fer.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 10,
                            Title = "نصب و تعمیر فر",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamir_laptop.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 11,
                            Title = "تعمیر کامپیوتر و لپ تاپ",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/modem_va_internet.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 11,
                            Title = "مودم و اینترنت",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamirat_mobile.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 12,
                            Title = "خدمات تعمیر موبایل",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/khadamt_kharid_mobile.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 12,
                            Title = "خدمات خرید موبایل و کالاهای دیجیتال",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/khadamat_dorbin.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 12,
                            Title = "خدمات دوربین",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/asbabkeshi_ba_khavar.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 13,
                            Title = "اسباب کشی با خاور و کامیون",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/asabkeshi_ba_neysan.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 13,
                            Title = "اسباب کشی با وانت و نیسان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kargar_jabejayi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 13,
                            Title = "کارگر جابه جایی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/taviz_batri_khodro.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 14,
                            Title = "تعویض باتری خودرو",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/batri_be_batri.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 14,
                            Title = "باتری به باتری",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/haml_khodro.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 14,
                            Title = "حمل خودرو",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/taviz_vayer_sham_khodro.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 14,
                            Title = "تعویض وایر و شمع خودرو",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/berashing_moye_banovan.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 15,
                            Title = "براشینگ موی بانوان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kotahi_moye_banovan.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 15,
                            Title = "کوتاهی موی بانوان",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/baft_moye_banovan.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 15,
                            Title = "بافت موی بانوان در خانه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/moraqebat_negahdari.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 16,
                            Title = "مراقبت و نگهداری",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/moayene_pezeshki.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 16,
                            Title = "معاینه پزشکی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/pirapezeshki.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 16,
                            Title = "پیراپزشکی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/petshop.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 17,
                            Title = "پت شاپ",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/khadamat_dampezshki.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 17,
                            Title = "خدمات دامپزشکی در محل",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/khadamt_yoga.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 18,
                            Title = "کلاس یوگا در خانه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kelas_polates.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 18,
                            Title = "کلاس پیلاتس در خانه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/khadamat_achare.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 19,
                            Title = "پیشنهاد فروش خدمات آچاره به شرکت ها",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/estekhdam_niroye_khedmatkar.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 20,
                            Title = "استخدام نیروی خدمتکار",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamirat_lebas.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 21,
                            Title = "تعمیرات لباس",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/dokht_lebas_zanane.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 21,
                            Title = "دوخت لباس زنانه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tamir_kifokafsh.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 21,
                            Title = "تعمیر کیف و کفش",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/keyko_shirini.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 22,
                            Title = "کیک و شیرینی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/dekor_tavalod.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 22,
                            Title = "دکور تولد",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/gol_arayi.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 22,
                            Title = "گل آرایی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/finger_food.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 22,
                            Title = "فینگرفود",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/amozesh_zaban_khareji.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 23,
                            Title = "آموزش زبان های خارجی",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/ebtedayi_motevasete.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 23,
                            Title = "آموزش ابتدایی تا متوسطه",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/kotahi_moye_kodak.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 24,
                            Title = "کوتاهی موی کودک",
                            VisitCount = 210
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = " به هزینه سفارش بعد از ساعت 21، مبلغ 150.000 تومان کمک هزینه رفت و آمد افزوده خواهد شد.",
                            ImagePath = "/images/homeservice/tarahi_otaq_kodak.jpg",
                            IsDeleted = false,
                            Price = 2000,
                            SubCategoryId = 24,
                            Title = "طراحی و دیزاین اتاق کودک",
                            VisitCount = 210
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomeServiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewd")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestForTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HomeServiceId");

                    b.HasIndex("ReviewId")
                        .IsUnique()
                        .HasFilter("[ReviewId] IS NOT NULL");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            Description = " تمیزکاری خانه",
                            HomeServiceId = 1,
                            IsDeleted = false,
                            IsReviewd = false,
                            RequestForTime = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestStatus = 5,
                            ReviewId = 1,
                            Title = "نظافت",
                            WinnerId = 0
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            Description = "کودک ",
                            HomeServiceId = 59,
                            IsDeleted = false,
                            IsReviewd = false,
                            RequestForTime = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestStatus = 5,
                            Title = "طراحی اتاق کودک",
                            WinnerId = 0
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            CreatedAt = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            Description = "نظافت راه پله ساختمان های اداری ",
                            HomeServiceId = 2,
                            IsDeleted = false,
                            IsReviewd = false,
                            RequestForTime = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestStatus = 2,
                            Title = "نظافت راه پله",
                            WinnerId = 0
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccept")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "از این کار راضی بودم",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ExpertId = 1,
                            IsAccept = false,
                            IsDeleted = false,
                            Rating = 4,
                            RequestId = 0,
                            Title = "عالی"
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/nezafat_pazirayi.jpg",
                            IsDeleted = false,
                            Title = "نظافت و پذیرایی"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/shostosho.jpg",
                            IsDeleted = false,
                            Title = "شستشو"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/karvash_detailing",
                            IsDeleted = false,
                            Title = "کارواش و دیتیلینگ"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/sarmayesh_garmayesh",
                            IsDeleted = false,
                            Title = "سرمایش و گرمایش"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/tamirat_sakhteman",
                            IsDeleted = false,
                            Title = "تعمیرات ساختمان"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/lolekeshi",
                            IsDeleted = false,
                            Title = "لوله کشی"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/tarahi_bazsazi.jpg",
                            IsDeleted = false,
                            Title = "طراحی و بازسازی ساختمان"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/baqbani_fazayesabz.jpg",
                            IsDeleted = false,
                            Title = "باغبانی و فضای سبز"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/choob_kabinet.jpg",
                            IsDeleted = false,
                            Title = "چوب و کابینت"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/nasab_tamir_lavazem.jpg",
                            IsDeleted = false,
                            Title = "نصب و تعمیر لوازم خانگی"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/khadamt_cp.jpg",
                            IsDeleted = false,
                            Title = "خدمات کامپیوتری"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/tamirat_mobile.jpg",
                            IsDeleted = false,
                            Title = "تعمیرات موبایل"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/barbari_jabejayi.jpg",
                            IsDeleted = false,
                            Title = "باربری و جابجایی"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/khadamat_khodro.jpg",
                            IsDeleted = false,
                            Title = "خدمات و تعمیرات خودرو"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/zibayi_banovan.jpg",
                            IsDeleted = false,
                            Title = "زیبایی بانوان"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/pezeshki_parastari.jpg",
                            IsDeleted = false,
                            Title = "پزشکی و پرستاری"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/heyvanat_khanegi.jpg",
                            IsDeleted = false,
                            Title = "حیوانات خانگی"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/tandorosti_varzesh.jpg",
                            IsDeleted = false,
                            Title = "تندرستی و ورزش"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/khadamat_sherkati.jpg",
                            IsDeleted = false,
                            Title = "خدمات شرکتی"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/tamin_niroye_ensani.jpg",
                            IsDeleted = false,
                            Title = "تامین نیروی انسانی"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/khayati_tamirat.jpg",
                            IsDeleted = false,
                            Title = "خیاطی و تعمیرات لباس"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/majales_roydad.jpg",
                            IsDeleted = false,
                            Title = "مجالس و رویدادها"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/amozesh.jpg",
                            IsDeleted = false,
                            Title = "آموزش"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagePath = "/images/subcategory/kodak.jpg",
                            IsDeleted = false,
                            Title = "کودک"
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 3,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Expert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Experts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Inventory")
                        .HasColumnType("float");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "a0db66aa-aa1a-4777-980d-59a7d4b38c9b",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ela@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ela",
                            Inventory = 50000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELA@GMAIL.COM",
                            NormalizedUserName = "ELA",
                            PasswordHash = "AQAAAAIAAYagAAAAEHzIBO8h+7NJa8a7ViwneX9D+oh/bNzl0/GP1WjKsyhAuUHpTDPnYpbQu6lfl9vLpg==",
                            PhoneNumber = "093689162292",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "ela"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "5e80fb8d-b0e1-4dda-8a21-23dba8d3c800",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Sara",
                            Inventory = 5000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "SARA@GMAIL.COM",
                            NormalizedUserName = "SARA",
                            PasswordHash = "AQAAAAIAAYagAAAAECjC7n2LUSyE7xSqRvMFPphqa4jfhrfXc9TJk5qeaKCrQt+g9Od4l/jyTAKlO+4tUQ==",
                            PhoneNumber = "09124361938",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "sara"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "18074c7c-3013-4329-b866-f5bb847642ac",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amir@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Amir",
                            Inventory = 5000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMIR@GMAIL.COM",
                            NormalizedUserName = "AMIR",
                            PasswordHash = "AQAAAAIAAYagAAAAELpHoJns3DKgtBwdVKsarm9An9+voyJyYKE1q7xS/IICKNrekS4YWM1UQcGATdnw7g==",
                            PhoneNumber = "09128361939",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "amir"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "628f6ff3-8e32-491a-8788-e993fecab3ef",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "leila@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Leila",
                            Inventory = 5000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "LEILA@GMAIL.COM",
                            NormalizedUserName = "LEILA",
                            PasswordHash = "AQAAAAIAAYagAAAAEDIuQoG7VXDTnezqFfFZX7DLZ9/MCqaI2s3Oo30kmbJzkhSpQtnvB9osMB3pUL++FA==",
                            PhoneNumber = "09016308704",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "leila"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "d7079450-467d-4378-b15d-573afa75fa7e",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "miko@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Miko",
                            Inventory = 5000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "MIKO@GMAIL.COM",
                            NormalizedUserName = "MIKO",
                            PasswordHash = "AQAAAAIAAYagAAAAENu3nGhW2qRgcQpcyozcUrq9Vp7oo+2+UobgKYzbQifwWRcOjXHR41UAOHFxsP6IBg==",
                            PhoneNumber = "09059073557",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "miko"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "80574313-6daf-42ca-aeec-5e9d85bb621a",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zahra@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Zahra",
                            Inventory = 5000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZAHRA@GMAIL.COM",
                            NormalizedUserName = "ZAHRA",
                            PasswordHash = "AQAAAAIAAYagAAAAECVhwkyLSonniva8HbPyhynX0DgX3qtLAuAwpLuo44UIV8ExkCtK33o3YsyvijKFtg==",
                            PhoneNumber = "09388383857",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "zahra"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "Tehran, Iran",
                            CityId = 1,
                            ConcurrencyStamp = "84bf25b1-200c-41b8-85bc-2e73ff63a81d",
                            CreatedAt = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Amin",
                            Inventory = 5000.0,
                            LastName = "Sdq",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMIN@GMAIL.COM",
                            NormalizedUserName = "AMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEIGldSj1UbYkwSfCUuSw4PDZPGgXM6yyRMQDVnv2n3/wuikpoVu7E4JLIzvBf7Z3pg==",
                            PhoneNumber = "09059073557",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Guid.NewGuid().ToString()",
                            TwoFactorEnabled = false,
                            UserName = "amin"
                        });
                });

            modelBuilder.Entity("ExpertHomeService", b =>
                {
                    b.Property<int>("ExpertsId")
                        .HasColumnType("int");

                    b.Property<int>("HomeServicesId")
                        .HasColumnType("int");

                    b.HasKey("ExpertsId", "HomeServicesId");

                    b.HasIndex("HomeServicesId");

                    b.ToTable("ExpertHomeService");

                    b.HasData(
                        new
                        {
                            ExpertsId = 1,
                            HomeServicesId = 1
                        },
                        new
                        {
                            ExpertsId = 1,
                            HomeServicesId = 59
                        },
                        new
                        {
                            ExpertsId = 3,
                            HomeServicesId = 2
                        },
                        new
                        {
                            ExpertsId = 2,
                            HomeServicesId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Expert",
                            NormalizedName = "EXPERT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.ExpertOffer", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.Expert", "Expert")
                        .WithMany("ExpertOffers")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.Request.Request", "Request")
                        .WithMany("ExpertOffers")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Expert");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.HomeService", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.Request.SubCategory", "SubCategory")
                        .WithMany("HomeServices")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Request", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.BaseEntities.City", "City")
                        .WithMany("Requests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.User.Customer", "Customer")
                        .WithMany("Requests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.Request.HomeService", "HomeService")
                        .WithMany("Requests")
                        .HasForeignKey("HomeServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.Request.Review", "Review")
                        .WithOne("Request")
                        .HasForeignKey("Achareh.Domain.Core.Entities.Request.Request", "ReviewId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("City");

                    b.Navigation("Customer");

                    b.Navigation("HomeService");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Review", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.User.Expert", "Expert")
                        .WithMany("Reviews")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.SubCategory", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.Request.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Admin", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("Achareh.Domain.Core.Entities.User.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Customer", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Achareh.Domain.Core.Entities.User.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Expert", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.User", "User")
                        .WithOne("Expert")
                        .HasForeignKey("Achareh.Domain.Core.Entities.User.Expert", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.User", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.BaseEntities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ExpertHomeService", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.Expert", null)
                        .WithMany()
                        .HasForeignKey("ExpertsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.Request.HomeService", null)
                        .WithMany()
                        .HasForeignKey("HomeServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Achareh.Domain.Core.Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Achareh.Domain.Core.Entities.User.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.BaseEntities.City", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.HomeService", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Request", b =>
                {
                    b.Navigation("ExpertOffers");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.Review", b =>
                {
                    b.Navigation("Request")
                        .IsRequired();
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.Request.SubCategory", b =>
                {
                    b.Navigation("HomeServices");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Customer", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.Expert", b =>
                {
                    b.Navigation("ExpertOffers");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Achareh.Domain.Core.Entities.User.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });
#pragma warning restore 612, 618
        }
    }
}
